import{elementsIsExist as a,sleep as m}from"../general.js";import"../scroll-timeline.js";export default class r{constructor(e,...i){var t,n;if(r.repeatObserve=(t=e.repeatObserve)!=null?t:!1,r.isIntersectedClass=(n=e.isIntersectedClass)!=null?n:"is-intersecting",i.length<=0){console.error("[ObserverTools] No one ActionOnView or AnimationTimeline have been created.");return}}}export class ActionOnView{constructor(e){var i,t,n;a(e.selectors)==!1&&console.log("[ActionOnView] Element is not exist!"),this.htmlElements=document.querySelectorAll(e.selectors),this.threshold=(i=e.threshold)!=null?i:[0],this.root=e.root,this.rootMargin=(t=e.rootMargin)!=null?t:"0px 0px 0px 0px",this.timeoutBeforeStart=(n=e.timeoutBeforeStart)!=null?n:0,this.breakpoints=e.breakpoints,this.defaultFunctionOnView=e.functionOnView,this.currentFunctionOnView=e.functionOnView,this.createIntersectionObserver(),this.applyBreakpoints(),window.addEventListener("resize",this.applyBreakpoints.bind(this))}applyBreakpoints(){var i;let e=l(this.breakpoints);if(e!=this.currentActiveBreakpointId)if(e!=1/0){this.currentActiveBreakpointId=e;let t=this.breakpoints[e];for(let n of this.htmlElements)t.unobserve?this.observer.unobserve(n):this.observer.observe(n),n.setAttribute("data-timeout",(i=t.timeoutBeforeStart.toString())!=null?i:"0"),this.currentFunctionOnView!=t.functionOnView&&(this.currentFunctionOnView=t.functionOnView,this.currentFunctionOnView&&this.currentFunctionOnView(n))}else{this.currentActiveBreakpointId=1/0;for(let t of this.htmlElements)t.setAttribute("data-timeout",this.timeoutBeforeStart.toString()),t.setAttribute("data-threshold",this.threshold.toString()),this.observer.observe(t),this.currentFunctionOnView!=this.defaultFunctionOnView&&(this.currentFunctionOnView=this.defaultFunctionOnView,this.currentFunctionOnView&&this.currentFunctionOnView(t))}}createIntersectionObserver(){let e=async function(i){for(let t of i)t.isIntersecting?(await m(parseInt(t.target.dataset.timeout)),t.target.classList.add(r.isIntersectedClass),this.currentFunctionOnView&&this.currentFunctionOnView(t)):t.isIntersecting==!1&&r.repeatObserve==!1&&t.target.classList.contains(r.isIntersectedClass)&&this.observer.unobserve(t.target)};this.observer=new IntersectionObserver(e.bind(this),{threshold:this.threshold,root:this.root,rootMargin:this.rootMargin});for(let i of this.htmlElements)this.observer.observe(i)}}export class TypedScrollTimeline{constructor(e){var i,t;this.source=(i=document.querySelector(e.source))!=null?i:document.documentElement,this.axis=(t=e.axis)!=null?t:"block"}}export class TypedViewTimeline{constructor(e){var i;this.subject=document.querySelector(e.subject),this.axis=(i=e.axis)!=null?i:"block",this.startOffset=e.startOffset,this.endOffset=e.endOffset}}export class TypedAnimationTimeline{constructor(e){if(!a(e.selectors)){console.log("[AnimationTimeline] No one element is exist!");return}this.animatedElements=document.querySelectorAll(e.selectors),this.properties=e.properties,this.settings=e.settings,this.animations=[],this.breakpoints=e.breakpoints,this.setDefaultSettingsIfEmpty(this.settings),this.applyBreakpoints(),window.addEventListener("resize",this.applyBreakpoints.bind(this))}setDefaultSettingsIfEmpty(e){var i,t;!e||(e.fill=(i=e.fill)!=null?i:"forwards",e.timeRange=(t=e.timeRange)!=null?t:"cover 0% 100%")}applyBreakpoints(){let e=l(this.breakpoints).toString();e!=this.currentActiveBreakpointId&&(e!="Infinity"?(this.currentActiveBreakpointId=e,this.breakpoints[e].disable?this.cancelAnimationsNotCurrentBreakpoint():this.animateElements(this.breakpoints[e].properties,this.breakpoints[e].settings,e)):(this.currentActiveBreakpointId="Infinity",this.animateElements(this.properties,this.settings,this.currentActiveBreakpointId)))}createTimeline(e){let i;return e instanceof TypedViewTimeline?i=new ViewTimeline({subject:e.subject,axis:e.axis,startOffset:e.startOffset,endOffset:e.endOffset}):e instanceof TypedScrollTimeline&&(i=new ScrollTimeline({source:e.source,axis:e.axis})),i}animateElements(e,i,t){var o;let n=Object.assign({},this.settings,i);n.id=t;for(let c of this.animatedElements)n.timeline=this.createTimeline((o=i==null?void 0:i.timeline)!=null?o:this.settings.timeline),this.animations.push(c.animate(e!=null?e:this.properties,n!=null?n:this.settings))}cancelAnimationsNotCurrentBreakpoint(){for(let e=this.animations.length-1;e>=0;e--)this.animations[e].id!=this.currentActiveBreakpointId&&(this.animations[e].cancel(),this.animations.splice(e,1))}}function l(s){if(!s)return 1/0;let e=Object.keys(s).map(Number),i=window.outerWidth,t=Math.min(...e.filter(n=>n>=i));return i>t||t==1/0?1/0:t}
