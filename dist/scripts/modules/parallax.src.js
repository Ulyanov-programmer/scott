import{elementIsExistWithLog as r}from"../general.js";export default class s{constructor(e,...a){this.parallaxElements=new Array;if(!!r("Parallax",e.parallaxContainerSelector)){this.parallaxContainer=document.querySelector(e.parallaxContainerSelector),this.containerRect=this.parallaxContainer.getBoundingClientRect(),this.containerCenterCoordX=Math.round(this.containerRect.width/2),this.containerCenterCoordY=Math.round(this.containerRect.height/2);for(let t of a){if(!t)return;t.htmlElement||(t.htmlElement=document.querySelector(t.selector)),this.parallaxElements.push(t)}this.parallaxContainer.addEventListener("mousemove",t=>window.outerWidth>=e.minWorkWidth?this.moveElements(t):!1)}}moveElements(e){let a=e.pageX-this.parallaxContainer.offsetLeft,t=e.pageY-this.parallaxContainer.offsetTop,n=a-this.containerCenterCoordX,o=t-this.containerCenterCoordY;for(let i of this.parallaxElements)i.parallax(n,o)}}export class ParallaxElement{constructor(e){this.reverseMode=!1;if(typeof e.selectorOrElement=="string"){if(!r("ParallaxElement"))return;this.selector=e.selectorOrElement}else this.htmlElement=e.selectorOrElement;this.parallaxCoeffX=e.parallaxCoeffX,this.parallaxCoeffY=e.parallaxCoeffY,this.reverseMode=e.reverseMode}parallax(e,a){this.reverseMode&&(e*=-1,a*=-1),this.htmlElement.style.transform=`translate3d(${e*this.parallaxCoeffX}px, ${a*this.parallaxCoeffY}px, 0)`}}
